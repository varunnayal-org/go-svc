name: DB Migrations

on:
  pull_request:
    types: [opened, reopened, synchronize]
  pull_request_review:
    types: [submitted]
  issue_comment:
    types: [created]

jobs:
  db-migration-approval-flow:
    runs-on: ubuntu-latest
    name: DB Migration
    if: |
      (github.event_name == 'pull_request' && !github.event.pull_request.draft) ||
      (github.event_name == 'pull_request_review' && github.event.review.state == 'approved') ||
      (github.event_name == 'issue_comment' && startsWith(github.event.comment.body, 'db migrate'))
    services:
      postgres:
        # Connection String: "postgres://postgres:postgres@postgres:5432/test?sslmode=disable"
        # postgres://postgres:postgres@localhost:5432/test?sslmode=disable
        image: postgres:15.5-alpine
        env:
          POSTGRES_DB: test
          POSTGRES_PASSWORD: postgres
          POSTGRES_EXTENSIONS: "pg_repack,uuid-ossp"
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 2s
          --health-timeout 1s
          --health-retries 25

      # image: {aws_account_id}.dkr.ecr.{region}.amazonaws.com/postgres:15.5-alpine

    steps:
      # # Uncomment this checkout if "node database-migration-action/dist/index.js" is used and you've checked out action in root directory
      # - name: checkout repo
      #   uses: actions/checkout@v4

      - name: Approval check and migration run flow
        uses: varunnayal-org/database-migration-action@feature-jira
        # ## Used "run" command for local testing
        # run: node database-migration-action/dist/index.js
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.DB_MIGRATION_AWS_ACCESS_KEY_SECRET }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.DB_MIGRATION_AWS_ACCESS_KEY_ID }}
          AWS_ENDPOINT_URL: ${{ vars.DB_MIGRATION_AWS_ENDPOINT_URL }}
          AWS_REGION: ${{ vars.DB_MIGRATION_AWS_REGION }}
        with:
          repo_token: ${{ secrets.DB_MIGRATION_GITHUB_TOKEN }} # custom repo token
          jira_username: ${{ secrets.DB_MIGRATION_JIRA_USERNAME }}
          jira_password: ${{ secrets.DB_MIGRATION_JIRA_PASSWORD }}
          jira_config: ${{ vars.DB_MIGRATION_JIRA_CONFIG }}
          aws_secret_store: ${{ secrets.DB_MIGRATION_SECRET_STORE }} # TODO Change it to Secret
          # dev_db_url: "postgres://postgres:postgres@postgres:5432/test?sslmode=disable"
          dev_db_url: "postgres://postgres:postgres@localhost:5432/test?sslmode=disable"

          debug: ${{ vars.DEBUG }} # defaults to false
          db_migration_echo_url: ${{ vars.DB_MIGRATION_ECHO_URL }} # TODO Change it to Secret
